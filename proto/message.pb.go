// Code generated by protoc-gen-go. DO NOT EDIT.
// source: message.proto

package rpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PingRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingRequest) Reset()         { *m = PingRequest{} }
func (m *PingRequest) String() string { return proto.CompactTextString(m) }
func (*PingRequest) ProtoMessage()    {}
func (*PingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{0}
}

func (m *PingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingRequest.Unmarshal(m, b)
}
func (m *PingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingRequest.Marshal(b, m, deterministic)
}
func (m *PingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingRequest.Merge(m, src)
}
func (m *PingRequest) XXX_Size() int {
	return xxx_messageInfo_PingRequest.Size(m)
}
func (m *PingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PingRequest proto.InternalMessageInfo

type PingResponse struct {
	Suceess              bool     `protobuf:"varint,1,opt,name=Suceess,json=suceess,proto3" json:"Suceess,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingResponse) Reset()         { *m = PingResponse{} }
func (m *PingResponse) String() string { return proto.CompactTextString(m) }
func (*PingResponse) ProtoMessage()    {}
func (*PingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{1}
}

func (m *PingResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingResponse.Unmarshal(m, b)
}
func (m *PingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingResponse.Marshal(b, m, deterministic)
}
func (m *PingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingResponse.Merge(m, src)
}
func (m *PingResponse) XXX_Size() int {
	return xxx_messageInfo_PingResponse.Size(m)
}
func (m *PingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PingResponse proto.InternalMessageInfo

func (m *PingResponse) GetSuceess() bool {
	if m != nil {
		return m.Suceess
	}
	return false
}

type IndirectPingRequest struct {
	Target               string   `protobuf:"bytes,1,opt,name=Target,json=target,proto3" json:"Target,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IndirectPingRequest) Reset()         { *m = IndirectPingRequest{} }
func (m *IndirectPingRequest) String() string { return proto.CompactTextString(m) }
func (*IndirectPingRequest) ProtoMessage()    {}
func (*IndirectPingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{2}
}

func (m *IndirectPingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IndirectPingRequest.Unmarshal(m, b)
}
func (m *IndirectPingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IndirectPingRequest.Marshal(b, m, deterministic)
}
func (m *IndirectPingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IndirectPingRequest.Merge(m, src)
}
func (m *IndirectPingRequest) XXX_Size() int {
	return xxx_messageInfo_IndirectPingRequest.Size(m)
}
func (m *IndirectPingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IndirectPingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IndirectPingRequest proto.InternalMessageInfo

func (m *IndirectPingRequest) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

type IndirectPingResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=Success,json=success,proto3" json:"Success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IndirectPingResponse) Reset()         { *m = IndirectPingResponse{} }
func (m *IndirectPingResponse) String() string { return proto.CompactTextString(m) }
func (*IndirectPingResponse) ProtoMessage()    {}
func (*IndirectPingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{3}
}

func (m *IndirectPingResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IndirectPingResponse.Unmarshal(m, b)
}
func (m *IndirectPingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IndirectPingResponse.Marshal(b, m, deterministic)
}
func (m *IndirectPingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IndirectPingResponse.Merge(m, src)
}
func (m *IndirectPingResponse) XXX_Size() int {
	return xxx_messageInfo_IndirectPingResponse.Size(m)
}
func (m *IndirectPingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IndirectPingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IndirectPingResponse proto.InternalMessageInfo

func (m *IndirectPingResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func init() {
	proto.RegisterType((*PingRequest)(nil), "rpc.PingRequest")
	proto.RegisterType((*PingResponse)(nil), "rpc.PingResponse")
	proto.RegisterType((*IndirectPingRequest)(nil), "rpc.IndirectPingRequest")
	proto.RegisterType((*IndirectPingResponse)(nil), "rpc.IndirectPingResponse")
}

func init() { proto.RegisterFile("message.proto", fileDescriptor_33c57e4bae7b9afd) }

var fileDescriptor_33c57e4bae7b9afd = []byte{
	// 194 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xcd, 0x4d, 0x2d, 0x2e,
	0x4e, 0x4c, 0x4f, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2e, 0x2a, 0x48, 0x56, 0xe2,
	0xe5, 0xe2, 0x0e, 0xc8, 0xcc, 0x4b, 0x0f, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x51, 0xd2, 0xe0,
	0xe2, 0x81, 0x70, 0x8b, 0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0x85, 0x24, 0xb8, 0xd8, 0x83, 0x4b, 0x93,
	0x53, 0x53, 0x8b, 0x8b, 0x25, 0x18, 0x15, 0x18, 0x35, 0x38, 0x82, 0xd8, 0x8b, 0x21, 0x5c, 0x25,
	0x5d, 0x2e, 0x61, 0xcf, 0xbc, 0x94, 0xcc, 0xa2, 0xd4, 0xe4, 0x12, 0x24, 0x03, 0x84, 0xc4, 0xb8,
	0xd8, 0x42, 0x12, 0x8b, 0xd2, 0x53, 0x4b, 0xc0, 0xea, 0x39, 0x83, 0xd8, 0x4a, 0xc0, 0x3c, 0x25,
	0x03, 0x2e, 0x11, 0x54, 0xe5, 0x28, 0x16, 0x24, 0xa3, 0x5a, 0x00, 0xe2, 0x1a, 0xd5, 0x70, 0xb1,
	0x04, 0x97, 0x67, 0xe6, 0x0a, 0xe9, 0x72, 0xb1, 0x80, 0x74, 0x08, 0x09, 0xe8, 0x15, 0x15, 0x24,
	0xeb, 0x21, 0xd9, 0x25, 0x25, 0x88, 0x24, 0x02, 0x31, 0x4e, 0x89, 0x41, 0xc8, 0x15, 0xe2, 0x03,
	0x98, 0x65, 0x42, 0x12, 0x60, 0x45, 0x58, 0x9c, 0x2a, 0x25, 0x89, 0x45, 0x06, 0x66, 0x4c, 0x12,
	0x1b, 0x38, 0x8c, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x6b, 0xf2, 0xf2, 0x64, 0x34, 0x01,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SwimClient is the client API for Swim service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SwimClient interface {
	Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error)
	PingIndirect(ctx context.Context, in *IndirectPingRequest, opts ...grpc.CallOption) (*IndirectPingResponse, error)
}

type swimClient struct {
	cc grpc.ClientConnInterface
}

func NewSwimClient(cc grpc.ClientConnInterface) SwimClient {
	return &swimClient{cc}
}

func (c *swimClient) Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error) {
	out := new(PingResponse)
	err := c.cc.Invoke(ctx, "/rpc.Swim/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *swimClient) PingIndirect(ctx context.Context, in *IndirectPingRequest, opts ...grpc.CallOption) (*IndirectPingResponse, error) {
	out := new(IndirectPingResponse)
	err := c.cc.Invoke(ctx, "/rpc.Swim/PingIndirect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SwimServer is the server API for Swim service.
type SwimServer interface {
	Ping(context.Context, *PingRequest) (*PingResponse, error)
	PingIndirect(context.Context, *IndirectPingRequest) (*IndirectPingResponse, error)
}

// UnimplementedSwimServer can be embedded to have forward compatible implementations.
type UnimplementedSwimServer struct {
}

func (*UnimplementedSwimServer) Ping(ctx context.Context, req *PingRequest) (*PingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Ping not implemented")
}
func (*UnimplementedSwimServer) PingIndirect(ctx context.Context, req *IndirectPingRequest) (*IndirectPingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PingIndirect not implemented")
}

func RegisterSwimServer(s *grpc.Server, srv SwimServer) {
	s.RegisterService(&_Swim_serviceDesc, srv)
}

func _Swim_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SwimServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Swim/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SwimServer).Ping(ctx, req.(*PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Swim_PingIndirect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IndirectPingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SwimServer).PingIndirect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Swim/PingIndirect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SwimServer).PingIndirect(ctx, req.(*IndirectPingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Swim_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.Swim",
	HandlerType: (*SwimServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _Swim_Ping_Handler,
		},
		{
			MethodName: "PingIndirect",
			Handler:    _Swim_PingIndirect_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "message.proto",
}
